Version control
git init = สร้าง Git repository จะได้ Director พร้อมระบบ ของ Git มาใน Director

git config --global = เพื่อให้รูว่าใครเป็นคนสร้าง Commit เเต่ละตัว Git ให้ผู้ใช้งานตั้งค่า Email เเละ Name ผ่านคำสั่ง
    -git config --global user.email    
    -git config --global user.Name

git add = เป็นคำสั่งที่เปลีั่ยนข้อมูลใน waiting Director ไปที่ Stating area

git status = คำสั่งนี้ใช้สำหรับตรวจสอบสถานะของไฟล์เเละข้อมูล ที่อยู่ใน Git

git commit = เป็นคำสั่งที่เปลี่ยนข้อมูลใน Staging area ไปที่ Git repository
    - git commit -m "message"

git log = เเสดง log ของ commit
    - git log 
    - git log --graph
    - git log --oneline

git diff = เช็ดการเปลี่ยนเเปลงของไฟล์ 
    Untrack files -> Empty diff 
    Modify files -> git diff <ตามด้วยชื่อไฟล์> (ถ้ายังไม่ git add เเล้ว)
    Staged file -> git diff --staged <ตามด้วยชื่อไฟล์> (ถ้า git add เเล้ว)

git stash = นำไฟล์ที่ไม่ได้อยุ่ใน Git repository ไปเก็บไว้ในที่เก็บชั่วคราว    
    Track file -> git stash (สำหรับไฟล์ที่ git add)
    Untracked files -> git stash --include --Untracked (สำหรับไฟล์ที่ยังไม่ git add)
    lgnone file -> git stash --all (Track ทุกไฟล์ รวมถึง git init)


    save staged เเบบกำหนดชื่อ -> git stash save "message"
    เเสดงรายการ staged -> git staged list
    ดึง stash กลับมา -> 
        git stash pop <ชื่อไฟล์ stash> (ลบ stash list ออก)
        git stash -p pop <ชื่อไฟล์ stash> (ดูเเบบละเอียด)
        git stash apply <ชื่อไฟล์ stash> (ไม่ลบ stash list ออก)
        git stash -p pop <ชื่อไฟล์ stash> (ดูเเบบละเอียด)
    clear list stash -> git stash clear    

git tag = เป็นเหมือน label ที่ใช้ชี้ไปที่ Commit ใดๆ ใน Git มักใช้กับการกำหนด Version
    list -> git tag
    Lightweight -> git tag "message" "commit code"    
    Annotation -> git tag --annotate "version" --message "message"

git show = ใช้สำหรับเเสดงรายละเอียด Commit ที่โดน tag
    - git show "version"    
   

Command line
code <ชื่อไฟล์> = สร้างไฟล์
cls = clear log
del <ชื่อไฟล์> = ลบไฟล์
